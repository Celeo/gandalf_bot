name: CI

on:
  push:
    branches: [master]

jobs:
  # Checkout the code, install dependencies, run tests, upload coverage
  build:
    runs-on: ubuntu-latest
    if: |
      !(github.event_name == 'push' && contains(github.event.head_commit.message, '[skip ci]'))
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: $HOME/.poetry/bin/poetry install
      - name: Create config
        run: cp config.example.json config.json
      - name: Run tests
        run: $HOME/.poetry/bin/poetry run pytest --cov=gandalf_bot --cov-report=xml
      - name: Upload coverage
        run: bash <(curl -s https://codecov.io/bash)
  # Checkout the code including submodules, build the Docker image, and push to hub.docker.com
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: |
      !(github.event_name == 'push' && contains(github.event.head_commit.message, '[skip ci]'))
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CHECKOUT_PAT }}
          submodules: true
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: celeo/gandalf_bot:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
